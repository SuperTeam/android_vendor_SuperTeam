<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2009, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License"); 
** you may not use this file except in compliance with the License. 
** You may obtain a copy of the License at 
**
**     http://www.apache.org/licenses/LICENSE-2.0 
**
** Unless required by applicable law or agreed to in writing, software 
** distributed under the License is distributed on an "AS IS" BASIS, 
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
** See the License for the specific language governing permissions and 
** limitations under the License.
*/
-->
    <!-- These resources are around just to allow their values to be customized
         for different hardware and product builds. -->
    <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Flag indicating whether the surface flinger is inefficient
         at performing a blur.  Used by parts of the UI to turn off
         the blur effect where it isn't worth the performance hit. -->
    <bool name="config_sf_slowBlur">true</bool>

    <!-- An Array of "[Connection name],[ConnectivityManager connection type],
         [associated radio-type],[priority]  -->
    <string-array translatable="false" name="networkAttributes">
        <item>wifi,1,1,1</item>
        <item>mobile,0,0,0</item>
    </string-array>

    <!-- Boolean indicating if we require the use of DUN on mobile for tethering.
         Note that this defaults to false so that if you move to a carrier that
         hasn't configured anything tethering will still work.  If you'd rather
         make the device untetherable on unconfigured devices, set to true -->
    <bool translatable="false" name="config_tether_dun_required">true</bool>

    <!-- Indicate whether the SD card is accessible without removing the battery. -->
    <bool name="config_batterySdCardAccessibility">true</bool>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>
    
    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 zones as follows:

         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1:    array[N] <= LUX < infinity

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>5</item>
        <item>10</item>
        <item>20</item>
        <item>40</item>
        <item>80</item>
        <item>120</item>
        <item>200</item>
        <item>500</item>
        <item>3000</item>
        <item>10000</item>
        <item>100000</item>
        <item>500000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>77</item>
        <item>128</item>
        <item>140</item>
        <item>153</item>
        <item>165</item>
        <item>178</item>
        <item>191</item>
        <item>204</item>
        <item>230</item>
        <item>242</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
    </integer-array>

    <!-- Array of output values for button backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
    -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
    </integer-array>

    <!-- Array of output values for keyboard backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         Passion has no keyboard so all values are zero.
    -->
    <integer-array name="config_autoBrightnessKeyboardBacklightValues">
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
    </integer-array>

<!-- Power animations: disable it on Harmony by default.
     They don't currently work.
     They cause wakeup issues, and erratic behavior with the power button.

     <bool name="config_enableScreenOnAnimation">true</bool>
     <bool name="config_enableScreenOffAnimation">true</bool> -->

    <!-- Component name of the service providing network location support. -->
    <string name="config_networkLocationProvider">com.google.android.location.NetworkLocationProvider</string>

    <!-- Component name of the service providing geocoder API support. -->
    <string name="config_geocodeProvider">com.google.android.location.GeocodeProvider</string>

    <!-- toggles weather device is tablet or phone. right now,
    tablets are know to have soft buttons, but phones have harware
    buttons. this might change in the future - especially when the
    honeycomb modifications become available for phones -->
    <bool name="cm_default_is_tablet">true</bool>

    <!-- toggles weather device uses soft buttons or got hardware
    buttons. as the time of writing for android 2.3.3. all soft button
    enabled devices are tablets, all disabled are phones. -->
    <bool name="cm_default_has_soft_buttons">true</bool>

    <!-- if true, status bar is shown on bottom by default -->
    <bool name="cm_default_bottom_status_bar">false</bool>
    <!-- if true, dead zone is activated, which disables pull
    out of the status bar on the middle area - i.e. for people
    who start drag-out events accidently while trying to hit
    the space key -->
    <bool name="cm_default_use_dead_zone">false</bool>
    <!-- if true, soft buttons shown on left, false show them on
    right side of status bar -->
    <bool name="cm_default_soft_buttons_left">false</bool>

    <!-- toggle which buttons to show if soft buttons enabled
    quickna: opens notification area with the press of one button
    instead of swiping the long way up/down on big tablets -->
    <bool name="cm_default_show_soft_home">false</bool>
    <bool name="cm_default_show_soft_menu">true</bool>
    <bool name="cm_default_show_soft_back">true</bool>
    <bool name="cm_default_show_soft_search">false</bool>
    <bool name="cm_default_show_soft_quick_na">true</bool>

    <!-- disables display of lockscreen both on boot as on
    power button press to wake devices. usful for devices you
    dont carry in pockets -->
    <bool name="cm_default_disable_lockscreen">true</bool>
    <!--  option only available for devices with soft buttons.
    when enabled, fullscreen apps show the status bar. status
    bar then gets an adition hide button to switch to real
    fullscreen  -->
    <bool name="cm_default_disable_fullscreen">false</bool>

    <!-- when enabled, the power menu (shown when long-pressing
    power... includes reboot and power off) is extended by
    some more options which reflect the soft keys. ignored if soft
    keys are disabled -->
    <bool name="cm_default_extend_power_menu">false</bool>

    <!--  toggles behavior of volume buttons. default (false) triggers
    volume change when pressing, user action when long-pressing. enabling
    (true) this option reverses this behavior -->
    <bool name="cm_default_reverse_volume_behavior">false</bool>
</resources>
