#!/bin/sh
#
# Super-mega opticharger of doom
# Shrinks apks by running pngcrush on png images
#
# Point APKCERTS at the full path to a generated apkcerts.txt file, such as:
# /home/shade/dev/sources/android-cm-eclair/out/target/product/dream_sapphire/obj/PACKAGING/target_files_intermediates/cyanogen_dream_sapphire-target_files-eng.shade/META/apkcerts.txt
#
# cyanogen - shade@chemlab.org
# ChrisSoyars - me@ctso.me

#Colores
YELLOW="\033[1;33m"	#el primer número es 1 (negrita); después el color
GREEN="\033[1;32m"
RED="\033[1;31m"
BLUE="\033[1;34m"
BLUEs="\033[1;36m"
WHITE="\033[1;37m"
ENDCOLOR="\033[0m"


OUT_TARGET_HOST=$(uname -a | grep Darwin)
if [ -z "$OUT_TARGET_HOST" ]
then
    OUT_TARGET_HOST=linux-x86
else
    OUT_TARGET_HOST=darwin-x86
fi

case "$TARGET_PRODUCT" in
	team_buzz) MDPI=1 ;;
	team_dream_sapphire) MDPI=1 ;;
	team_one) MDPI=1 ;;
	team_legend) MDPI=1 ;;
	team_hero) MDPI=1 ;;
	team_z71) MDPI=1 ;;
	team_zero) MDPI=1 ;;
	team_zeppelin) MDPI=1 ;;
	team_morrison) MDPI=1 ;;
	*) MDPI=0
esac

# Discriminación de que dispositivos no tendran animacion especial
case "$TARGET_PRODUCT" in
	team_crespo) NOANIM=0 ;;
        team_dream_sapphire) NOANIM=1 ;;
	team_galaxysmtd) NOANIM=0 ;;
	team_one) NOANIM=1 ;;
        team_hero) NOANIM=1 ;;
        team_passion) NOANIM=1 ;;
	team_zero) NOANIM=0 ;;
	team_zeppelin) NOANIM=0 ;;
	team_morrison) NOANIM=0 ;;
	*) NOANIM=0
esac

set -e
QUIET=1
QFLAG=-q
BASE=`pwd`
TMPDIR=/tmp/opticharge-$$
FRAME_IMG_MDPI=$ANDROID_BUILD_TOP/vendor/SuperTeam/mods/frame_mdpi/*
FRAME_IMG_HDPI=$ANDROID_BUILD_TOP/vendor/SuperTeam/mods/frame_hdpi/*
FRAME_ANIM=$ANDROID_BUILD_TOP/vendor/SuperTeam/mods/anim/*
FRAME_IMG_MDPI_ONE=$ANDROID_BUILD_TOP/vendor/SuperTeam/mods/frame_mdpi_one/*
FRAME_IMG_HDPI_NEXUSS=$ANDROID_BUILD_TOP/vendor/SuperTeam/mods/frame_hdpi_nexusS/*

if [ "$APKCERTS" = "" ];
then
    APKCERTS=$OUT/obj/PACKAGING/target_files_intermediates/$TARGET_PRODUCT-target_files-$TARGET_BUILD_VARIANT.$LOGNAME/META/apkcerts.txt
    if [ ! -f "$APKCERTS" ];
    then
        echo "Set APKCERTS to the path to your apkcerts.txt file"
        exit 1;
    fi
fi

if [ ! -f "$APKCERTS" ];
then
    echo "Invalid path to apkcerts.txt, set APKCERTS to the correct path."
fi

if [ "`which pngcrush`" = "" ];
then
    echo "Please install pngcrush"
    exit 1;
fi

if [ "`which aapt`" = "" ];
then
    echo "Please ensure aapt is in your \$PATH"
    exit 1;
fi

if [ "`which zipalign`" = "" ];
then
    echo "Please ensure zipalign is in your \$PATH"
    exit 1;
fi

if [ -e "$1" ];
then
    NAME=`basename $1`;
    echo $GREEN" Optimizando $NAME..."$ENDCOLOR;
    echo " "

    if [ "$2" != "" ];
    then
        CERT=build/target/product/security/$2.x509.pem
        KEY=build/target/product/security/$2.pk8
        if [ ! -f "$ANDROID_BUILD_TOP/$CERT" ];
        then
            echo "$CERT does not exist!";
            exit 1;
        fi
    else
        APKINFO=`grep "name=\"$NAME\"" $APKCERTS`;
        [ $QUIET ] || echo "APKINFO: $APKINFO";
        if [ "$APKINFO" = "" ];
        then
            echo "No apk info for $NAME";
            exit 1;
        fi
        CERT=`echo $APKINFO | awk {'print $2'} | cut -f 2 -d "=" | tr -d "\""`;
        KEY=`echo $APKINFO | awk {'print $3'} | cut -f 2 -d "=" | tr -d "\""`;
        if [ "$CERT" = "" ];
        then
            echo "Unable to find certificate for $NAME"
            exit 1;
        fi
    fi

    [ $QUIET ] || echo "Certificate: $CERT";

    [ -d $TMPDIR/$NAME ] && rm -rf $TMPDIR/$NAME
    mkdir -p $TMPDIR/$NAME
    trap "rm -rf $TMPDIR; exit" INT TERM EXIT
    cd $TMPDIR/$NAME
    unzip -q $BASE/$1
if [ "$MDPI" -eq 1 ]; then
   echo $BLUEs" Dispositivo MDPI"$ENDCOLOR
   cp -rf $FRAME_IMG_MDPI res/drawable-mdpi/

	if [ "$NOANIM" -eq 1 ]; then
	   echo " "
	   echo $WHITE" Con animaciones normales"$ENDCOLOR
	else
	   echo " "
	   echo $WHITE" Con animaciones especiales"$ENDCOLOR
	   cp -rf $FRAME_ANIM res/anim/
	   echo " "
	fi
else
   echo $BLUEs" Dispositivo HDPI"$ENDCOLOR
	if [ "$NOANIM" -eq 1 ]; then
	   echo " "
	   echo $WHITE" Con animaciones normales"$ENDCOLOR
	   cp -rf $FRAME_IMG_HDPI res/drawable-hdpi/
	   echo " "
	else
	   echo " "
	   echo $WHITE" Con animaciones especiales"$ENDCOLOR
	   cp -r $FRAME_IMG_HDPI res/drawable-hdpi/
	   cp -r $FRAME_ANIM res/anim/
	   echo " "
	fi
fi

#Copia de fondo de pantalla para Geeksphone y Magic
case "$TARGET_PRODUCT" in
	team_one) cp -rf $FRAME_IMG_MDPI_ONE res/ ;;
	team_dream_sapphire) cp -rf $FRAME_IMG_MDPI_ONE res/ ;;
	team_zero) cp -rf $FRAME_IMG_MDPI_ONE res/ ;;
	team_zeppelin) cp -rf $FRAME_IMG_MDPI_ONE res/ ;;
	team_morrison) cp -rf $FRAME_IMG_MDPI_ONE res/ ;;
	*)
esac

#Copia de fondo de pantalla para Nexus S y Samsung Galaxy S
case "$TARGET_PRODUCT" in
	team_crespo) cp -rf $FRAME_IMG_HDPI_NEXUSS res/ ;;
	team_galaxysmtd) cp -rf $FRAME_IMG_HDPI_NEXUSS res/ ;;

	*)
esac

echo $RED
    for x in `find . -name "*.png" | grep -v "\.9.png$" | tr "\n" " "`
    do
        [ $QUIET ] || echo "Crushing $x"
        pngcrush $QFLAG $x $x.crushed 1>/dev/null
        if [ -e "$x.crushed" ];
        then
            mv $x.crushed $x
        fi
    done
echo $ENDCOLOR
    cp $BASE/$1 $BASE/$1.old

    [ $QUIET ] || echo "Repacking apk.."
    aapt p -0 res/raw -0 res/raw-en -F $NAME .
    
    [ $QUIET ] || echo "Resigning with cert: `echo $CERT`"

    [ $QUIET ] || echo java -jar $ANDROID_BUILD_TOP/out/host/$OUT_TARGET_HOST/framework/signapk.jar $ANDROID_BUILD_TOP/$CERT $ANDROID_BUILD_TOP/$KEY $NAME signed_$NAME
    java -jar $ANDROID_BUILD_TOP/out/host/$OUT_TARGET_HOST/framework/signapk.jar $ANDROID_BUILD_TOP/$CERT $ANDROID_BUILD_TOP/$KEY $NAME signed_$NAME
    [ $QUIET ] || echo "Zipalign.."
    zipalign -f 4 signed_$NAME $BASE/$1
    if [ ! $QUIET ]; then
        ls -l $BASE/$1.old
        ls -l $BASE/$1
    fi
    rm $BASE/$1.old
else
    echo "Usage: $0 [apk file]"
fi

