#!/bin/bash
#
# Squish a otapackage for distribution
# Superatmel y Blerfont (Base Cyanogen)
#

OUT_TARGET_HOST=linux-x86
export VENDOR=vendor/SuperTeam
MODS=$VENDOR/mods
OTAPACKAGE=$OUT/$TARGET_PRODUCT-ota-$TARGET_BUILD_VARIANT.$LOGNAME.zip

MD5=md5sum
OPTICHARGER=$ANDROID_BUILD_TOP/$VENDOR/tools/opticharger2
OPTICHARGER_FRAMEWORK=$ANDROID_BUILD_TOP/$VENDOR/tools/opticharger_framework
QUIET=-q
DELETE_BINS="applypatch applypatch_static check_prereq recovery updater"
squash_opts="-force-uid 1000 -force-gid 1000 -no-progress -noappend -no-exports -no-recovery"
REPACK=$OUT/repack.d
REPACKOTA=$REPACK/ota
updater=$REPACKOTA/META-INF/com/google/android/updater-script

CORES=$( cat /proc/cpuinfo | grep -c processor )

. mensajes.sh

# Verificación de entorno de desarrollo operativo
if [ -z "$OUT" -o ! -d "$OUT" ]; then
  msgErr "$0 solo funciona con un entorno completo de desarrollo. $OUT debe existir."
  exit 1
fi

# Se verifica que existe el fichero inicial.
if [ ! -f "$OTAPACKAGE" ]; then
  msgErr "$OTAPACKAGE no existe!"
  exit 1
fi

# Configuración del dispositivo
# LOWDISK: 1 indica que algunas aplicaciones se pasan del framework al directorio data. 0 valor por defecto.
# GALLERY: 2D indica que la aplicación de la galería de fotos, será la versión 2D por defecto. 3D valor por defecto.
# DPI: mdpi indica que el dispositivo usa resolución media. hdpi valor por defecto.
# ANIM: 1 indica que no se modifica las animaciones del dispositivo. 0 valor por defecto.
# WANT_SQUASHFS: 1 indica que se creara una imagen SQUASHFS para el bin. 0 valor por defecto.
# ALIAS: Nombre corto del dispositivo. Se recomienda no tocar este valor, se toma a partir del nombre del product.
# KERNELMOD: 1 indica que el núcleo tiene módulos sin comprimir. 0 valor por defecto

# Valores por defecto
WANT_SQUASHFS=0
DPI=hdpi
EXTRAS2=0
EXTRATAB=0
LOWDISK=0
GALLERY=3D
ANIM=0
KERNELMOD=0
ALIAS=${TARGET_PRODUCT:5}

#Valores específicos
case "$ALIAS" in
    bravo)
        LOWDISK=1
        KERNELMOD=1
        ;;
    buzz)
       GALLERY=2D
       KERNELMOD=1
       ;;
    crespo)
       KERNELMOD=0
       ;;
    dream_sapphire) 
        WANT_SQUASHFS=1
        DPI=mdpi
        LOWDISK=1
        ANIM=1
        ;;
    galaxys2)
       ANIM=0
       EXTRAS2=1
       KERNELMOD=0
        ;;
    galaxytab)
       ANIM=0
       EXTRATAB=1
       KERNELMOD=0
        ;;
    one) 
        DPI=mdpi 
        LOWDISK=1
        ANIM=1
        ;;
    hero) 
        DPI=mdpi
        GALLERY=2D
        ANIM=1
        KERNELMOD=1
        ;;
    legend) 
        DPI=mdpi 
        ;;
    z71) 
        DPI=mdpi
        GALLERY=2D
        KERNELMOD=1
        ;;
    zeppelin)
        DPI=mdpi
        ;;
    morrison) 
        DPI=mdpi 
        ;;
    zero) 
        DPI=mdpi 
        LOWDISK=1
        ;;
esac

MOD_DPI=$ANDROID_BUILD_TOP/$VENDOR/mods/$DPI

# Control de Gallery 2D
if [ "$GALLERY" = 2D ]; then
	if [ ! -f $OUT/system/app/Gallery.apk ]
	then
	  msgErr "Gallery.apk no esta compilado, ejecuta make Gallery y make otapackage"
	  exit 1
	else
	  msgOK "Control de Gallery.apk correcto"
	fi
fi

# Si se requiere squashfs se verifica si existe el comando y su versión
if [ "$WANT_SQUASHFS" -eq 1 ]; then
  fatal=0
  MKSQUASHFS_VER_REQ=4
  if type mksquashfs >/dev/null 2>&1; then
    if mksquashfs -version | grep -q "version $MKSQUASHFS_VER_REQ"; then :; else
      msgErr "mksquashfs debe estar al menos en versión $MKSQUASHFS_VER_REQ para este build."
      fatal=1
    fi
  else
    msgErr "$TARGET_PRODUCT requiere mksquashfs."
    fatal=1
  fi

  if [ "$fatal" -ne 0 ]; then
    msgErr "Paquete sin optimizar está disponible en $OTAPACKAGE"
    exit $fatal
  fi
fi

# Elimina cualquier directorio de un trabajo antiguo
clear
msgInfo "Limpiando el entorno..."
rm -rf $REPACK
mkdir -p $REPACK

# Descomprime el otapackage y ejecuta opticharge en todos los apks
mkdir $REPACKOTA

    cd $REPACKOTA
    msgStatus "Desempaquetando $OTAPACKAGE..."
    unzip $QUIET $OTAPACKAGE
  
# Copiado de archivos comunes
    cp -rf $ANDROID_BUILD_TOP/$MODS/common/* $REPACKOTA/
# Copiado de archivos base mdpi o hdpi
    cp -rf $MOD_DPI/* $REPACKOTA/
# Extraemos el framework para modificarlo
    mkdir $REPACKOTA/system/framework/opticharge
    cd $REPACKOTA/system/framework/opticharge
    msgStatus "Desempaquetando framework-res..."
    unzip -q ../framework-res.apk
    cp -rf $ANDROID_BUILD_TOP/$MODS/frame_$DPI/* res/drawable-$DPI/
    cp -rf $ANDROID_BUILD_TOP/$MODS/wallpaper_$DPI/* res/drawable/
  
    if [ "$ANIM" -eq 0 ]; then
       msgOK "Con animaciones especiales"
       cp -rf $ANDROID_BUILD_TOP/$MODS/frame_anim/* res/anim/
    fi

# Comprimimos sin optimizar pues lo haremos luego 
    msgStatus "Comprimiendo framework..."
    zip -rq framework-res.apk *
    mv -f framework-res.apk ../framework-res.apk
    cd ..
    rm -rf opticharge
  
# Copiado de archivos especificos del dispositivo
    cp -r $ANDROID_BUILD_TOP/$MODS/terminales/$ALIAS/* $REPACKOTA/
  
# Para los que necesitan espacio
    if [ "$LOWDISK" -eq 1 ]; then
        msgInfo "Dispositivo con espacio al límite"
        msgStatus "Pasando archivos de system a data para conseguir espacio"
        mv  $REPACKOTA/system/app/Gmail.apk $REPACKOTA/data/app/com.google.android.gm.apk
        mv  $REPACKOTA/system/app/Maps.apk $REPACKOTA/data/app/com.android.apps.maps.apk
        mv  $REPACKOTA/system/app/VoiceSearch.apk $REPACKOTA/data/app/com.google.android.voiceSearch.apk
        mv  $REPACKOTA/system/app/Street.apk $REPACKOTA/data/app/com.google.android.street.apk
        mv  $REPACKOTA/system/app/YouTube.apk $REPACKOTA/data/app/com.google.android.youtube.apk
    fi
  
# Renombrado Gallery dependiendo del dispositivo que sea
    msgOK "Activado Gallery $GALLERY"
    if [ "$GALLERY" = 2D ]; then
        mv $REPACKOTA/system/app/Gallery3D.apk $REPACKOTA/system/app/Gallery3D.app
        cp $OUT/system/app/Gallery.apk $REPACKOTA/system/app/Gallery.apk
    fi
  
    cd $REPACKOTA/system/framework
  
# Modificaciones de SuperTeam
    rm -rf $REPACKOTA/system/app/RomManager.apk
    rm -rf $REPACKOTA/system/app/Protips.apk 
    rm -rf $REPACKOTA/system/app/Provision.apk
    rm -rf $REPACKOTA/system/app/QuickSearchBox.apk
    rm -rf $REPACKOTA/system/app/SpareParts.apk
    rm -rf $REPACKOTA/system/app/SpeechRecorder.apk

#Modificadiones especiales para Galaxy Tab
if [ "$EXTRATAB" -eq 1 ]; then
msgOK "Modicaciones especiales para Galaxy Tab"
    rm -rf $REPACKOTA/system/app/LatinIME.apk
    rm -rf $REPACKOTA/system/app/Torch.apk
    rm -rf $REPACKOTA/system/etc/super/04superteam
    rm -rf $REPACKOTA/boot.img
    cp $OUT/kernel $REPACKOTA/zImage
    cp $ANDROID_BUILD_TOP/device/samsung/galaxytab/Kernel_instalacion.zip $OUT/Kernel_instalacion.zip
fi;

#Modificadiones especiales para Galaxy S2
if [ "$EXTRAS2" -eq 1 ]; then
msgOK "Modicaciones especiales para Galaxy S2"
    rm -rf $REPACKOTA/system/app/LatinIME.apk
    rm -rf $REPACKOTA/system/app/Torch.apk
    rm -rf $REPACKOTA/system/etc/super/04superteam
fi;

# Ejecuta si existe personalizaciones específicas del dispositivo.
    if [ -f $ANDROID_BUILD_TOP/$MODS/terminales/$ALIAS/personalizar.sh ]; then
    	$ANDROID_BUILD_TOP/$MODS/terminales/$ALIAS/personalizar.sh $REPACKOTA
    	rm $REPACKOTA/personalizar.sh
    fi
    		
# Ejecuta opticharger especial sobre el framework para copiar las imagenes modificadas de la rom dentro de él
    $OPTICHARGER framework-res.apk

#Ejecuta opticharger sobre el resto de apks de la rom
  cd $REPACKOTA/system/app
  find ./ -name \*.apk | xargs --max-args=1 --max-procs=${CORES} $OPTICHARGER


mv $REPACKOTA/system/app/Stk.apk $REPACKOTA/system/app/Stk.app
mv $REPACKOTA/system/app/Development.apk $REPACKOTA/system/app/Development.app

if [ "$WANT_SQUASHFS" -eq 1 ]; then
  # Recoloca su
  cp -a $REPACKOTA/system/xbin $REPACK/_xbin/
  rm -f $REPACK/_xbin/su $REPACKOTA/system/bin/su
  mv $REPACKOTA/system/xbin/su $REPACKOTA/system/bin/su
  chmod -R 555 $REPACK/_xbin/*

  # Crea enlaces simbolicos para su y busybox (updater-script no puede funcionar con el sistema de ficheros squashfs).
  ln -s ../bin/su $REPACK/_xbin/su
  for link in `sed -n -e's/,//g' -e'/symlink(.*busybox/,/xbin.*);/p' $updater | tr '"' '\n' | sed -n -e'\,/system/xbin/,s,/system/xbin/,,p'`
  do
    ln -s busybox $REPACK/_xbin/$link
  done

  # Crea el squashfs con un nuevo y mejorado linkado simbolico!
  mksquashfs $REPACK/_xbin/* $REPACK/_xbin.sqf $squash_opts
  rm -r $REPACKOTA/system/xbin/*
  mv $REPACK/_xbin.sqf $REPACKOTA/system/xbin/xbin.sqf
  chmod 444 $REPACKOTA/system/xbin/xbin.sqf

  # Borrado lo referente a xbin y corregido updater-script
  sed -i -e's,system/xbin/su,system/bin/su,g' -e'/xbin/d' $updater
fi

# Corregir build.prop
sed -i \
  -e '/ro\.kernel\.android\.checkjni/d' \
  -e '/ro\.build\.type/s/eng/user/' \
  $REPACKOTA/system/build.prop

# Eliminar binarios innecesarios
cd $REPACKOTA/system/bin
$ECHO $DELETE_BINS | xargs rm -f

# Eliminar drivers inalambricos
rm -rf $REPACKOTA/system/lib/modules/*/kernel/drivers/net

# No se necesita recovery (en caso de existir)
rm -rf $REPACKOTA/recovery

# Strip modulos
if [ "$KERNELMOD" -eq 1 ];  then
    msgStatus "Comprimiendo módulos"
    find $REPACKOTA/system/lib/modules -name "*.ko" -print0 | xargs -0 arm-eabi-strip --strip-unneeded
fi

# Determinar como se llamará el paquete firmado
MODVERSION=`sed -n -e'/ro\.modversion/s/^.*SuperOSR-//p' $REPACKOTA/system/build.prop`
: ${MODVERSION:=test}
OUTFILE=$OUT/SuperOSR-$MODVERSION.zip

# Empaquetar y firmar
msgStatus "Comprimiendo..."
cd $REPACKOTA
zip $QUIET -r $REPACK/update.zip . 

msgStatus "Firmando la ROM..."
SECURITYDIR=$ANDROID_BUILD_TOP/build/target/product/security
java -Xmx512m \
  -jar $ANDROID_BUILD_TOP/out/host/$OUT_TARGET_HOST/framework/signapk.jar \
  -w $SECURITYDIR/testkey.x509.pem $SECURITYDIR/testkey.pk8 \
  $REPACK/update.zip $OUTFILE
$ECHO

if [ "$EXTRATAB" -eq 1 ]; then
msgStatus "Prepacion de los archivos rfs"
       #cp $MOD_DPI/system/media/bootanimation.zip $REPACK/ota/system/media
       cp -r $REPACK/ota/system/* $OUT/system
       rm -f $OUT/system/etc/super/04superteam
       rm -f $OUT/system/app/Torch.apk
       rm -f $OUT/system/app/LatinIME.apk
msgStatus "Limpiando el entorno de Galaxy Tab..."
       rm -rf $REPACK
    else
msgStatus "Limpiando el entorno..."
       rm -rf $REPACK
fi;

# Crear md5 para el paquete firmado

img=`basename $OUTFILE`
cd `dirname $OUTFILE`
$MD5 $img > $img.md5sum
msgOK "Paquete creado: $OUTFILE"
msgOK `cat $img.md5sum`

exit 0
